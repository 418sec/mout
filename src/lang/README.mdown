# amd-utils / lang #

Language Utilities. Easier inheritance and scope handling.

For usage examples check specs inside `/tests` folder. Unit tests are the best
documentation you can get...


## <span id="toc">Table of Contents</span>

 - [`bind()`](#bind)
 - [`createObject()`](#createObject)
 - [`inheritPrototype()`](#inheritPrototype)
 - [`mixIn()`](#mixIn)



### bind(fn, context, [args]):Function <small>[<a href="#bind" id="bind">link</a>]</small>

Return a function that will execute in the given context, optionally adding any additional supplied parameters to the beginning of the arguments collection.

#### Arguments

 1. `fn` (Function)    : Target Function
 2. `context` (Object) : Execution context (object used as `this`)
 3. `[...args]` (*)    : Arguments (0...n arguments)



### createObject(parent, props):Object <small>[<a href="#createObject" id="createObject">link</a>]</small>

Create Object using prototypal inheritance and setting custom properties.

Mix between [Douglas Crockford Prototypal Inheritance](http://javascript.crockford.com/prototypal.html) and the EcmaScript 5 `Object.create()` method.

#### Arguments

 1. `parent` (Object)  : Parent Object
 2. `[props]` (Object) : Object properties



### inheritPrototype(child, parent):void <small>[<a href="#inheritPrototype" id="inheritPrototype">link</a>]</small>

Inherit prototype from another Object.



### mixIn(target, objects):Object <small>[<a href="#mixIn" id="mixIn">link</a>]</small>

Combine properties from all the objects into first one.

This method affects target object in place, if you want to create a new Object pass an empty object as first param.

#### Arguments

 1. `target` (Object)        : Target Object.
 2. `...objects` (...Object) : Objects to be combined (0...n objects).


