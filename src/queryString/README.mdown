# amd-utils / queryString #

Utilities for query string manipulation.


## <a href="#toc" name="toc">Table of Contents</a>

 - [`decodeQuery()`](#decodeQuery)
 - [`encodeQuery()`](#encodeQuery)
 - [`getParam()`](#getParam)
 - [`getQueryObject()`](#getQueryObject)
 - [`getQueryString()`](#getQueryString)
 - [`hasParam()`](#hasParam)



## <a href="#decodeQuery" name="decodeQuery">decodeQuery(str):Object</a>

Parses query string and creates an object of keys => vals.

```js
decodeQuery('?foo=bar&lorem=123'); // {foo: "bar", lorem: 123}
```


## <a href="#encodeQuery" name="encodeQuery">encodeQuery(obj):String</a>

Encode object into a query string.

```js
encodeQuery({foo: "bar", lorem: 123}); // "?foo=bar&lorem=123"
```


## <a href="#getParam" name="getParam">getParam(param, url):*</a>

Get query parameter value. Will typecast value if boolean or number.
Allow parsing a custom URL or uses `location.href` by default.

### Arguments:

 1. `param` (String)    : Parameter name.
 2. `[url]` (String)    : Url. Will use `location.href` by default.

### Example:

```js
//if current URI = http://example.com/?foo=bar&lorem=123&ipsum=false
getParam('foo');   // "bar"
getParam('lorem'); // 123
getPram('ipsum');  // false

//allow custom URL
getParam('dolor', 'http://example.com/?dolor=amet'); // "amet"
```


## <a href="#getQueryObject" name="getQueryObject">getQueryObject(url):Object</a>

Parses URL, extracts query string and decodes it. Alias to
`decodeQuery(getQueryString(url))`. Will use `location.href` by default.

```js
//if current URI = http://example.com/?foo=bar&lorem=123&ipsum=false
getQueryObject(); // {foo: "bar", lorem: 123, ipsum: false}

//allow custom URL
getQueryObject('http://example.com/?lorem=ipsum'); // {lorem: ipsum}
```


## <a href="#getQueryString" name="getQueryString">getQueryString(url):String</a>

Gets full query as string with all special chars decoded. It avoid issues with
query string inside `location.hash` (e.g. "index.html?dolor=1#/lorem/?foo=bar").
Will use `location.href` by default.

```js
//if current URI = http://example.com/?foo=bar&lorem=123&ipsum=false
getQueryString(); // "?foo=bar&lorem=123&ipsum=false"

//allow custom URL
getQueryString('http://example.com/?lorem=ipsum'); // "?lorem=ipsum"
```


## <a href="#hasParam" name="hasParam">hasParam(paramName, url):Boolen</a>

Checks if query string contains parameter.

### Arguments:

 1. `paramName` (String) : Parameter name.
 2. `[url]` (String)     : Custom URL. Will use `location.href` by default.

### Example:

```js
//if current URI = http://example.com/?foo=bar&lorem=123&ipsum=false
hasParam('foo');   // true
hasParam('dolor'); // false

//allow custom URL
getQueryString('lorem', 'http://example.com/?lorem=ipsum'); // true
getQueryString('foo', 'http://example.com/?lorem=ipsum');   //false
```

-------------------------------------------------------------------------------

For more usage examples check specs inside `/tests` folder. Unit tests are the
best documentation you can get...
