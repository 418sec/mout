# amd-utils / array #

Array utilities.



## <a href="#toc" name="toc">Table of Contents</a>

 - [`filter()`](#filter)
 - [`forEach()`](#forEach)
 - [`indexOf()`](#indexOf)
 - [`remove()`](#remove)
 - [`removeAll()`](#removeAll)
 - [`unique()`](#unique)



## <a href="#filter" name="filter">filter(arr, callback, [thisObj]):Array </a>

ES5 Array filter.

Creates a new array with all elements that pass the callback test.

more info at [MDN Array#filter](https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/filter)



## <a href="#forEach" name="forEach">forEach(arr, callback, [thisObj]):void</a>

ES5 Array forEach.

more info at [MDN Array#forEach](https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/forEach)



## <a href="#indexOf" name="indexOf">indexOf(arr, item, [fromIndex]):Number</a>

ES5 indexOf (since it doesn't work on IE 6-8 natively)

more info at [MDN Array#indexOf](https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/indexOf)



## <a href="#remove" name="remove">remove(arr, item):void</a>

Remove a single item from the array.

IMPORTANT: it won't remove duplicates, just a single item.

### Example

```js
var foo = [1, 2, 3, 4];
remove(foo, 2);
console.log(foo); // [1, 3, 4]
```



## <a href="#removeAll" name="removeAll">removeAll(arr, item):void</a>

Remove all instances of an item from the array.

### Example

```js
var foo = [1, 2, 3, 4, 2, 2];
removeAll(foo, 2);
console.log(foo); // [1, 3, 4];
```



## <a href="#unique" name="unique">unique(arr):Array</a>

Return a new Array of unique items.

### Example

```js
var foo = [1, 2, 3, 4, 2, 2, 3, 4];
var bar = unique(foo);
console.log(foo); // [1, 2, 3, 4];
```



-------------------------------------------------------------------------------

For more usage examples check specs inside `/tests` folder. Unit tests are the
best documentation you can get...

